Attribute VB_Name = "MDB_HRdata"
Option Explicit
Option Base 1
Public wH(6, 25)   As Single
Public DH_Tide     As Single

'********************************************************************
'【サブルーチン名】Data_IN()
'【処理概要】
' 水文.mdbから水位観測値を読み込む。
'【処理詳細】
' (1)水文.mdbから1時間毎の水位観測値を読み込む。
' (2)水位観測値に-99が含まれる場合、補填する。
'【修正履歴】
' 2004/03/24 欠測の補填は現時刻だけとした。
'【コメント】
'※dsは、関数の引数で2021/05/25 00:40等である。
'※deは、関数の引数で2021/05/25 17:40等である。
'※ircは、関数の戻り値でTrue、Falseのいずれかである。
'※この関数は10分毎に2回呼ばれるようである。
'※New_RSHINK.exe、NewNSKG2.exe等は1時間毎の25時間分、25個のデータを必要とするようである。
'********************************************************************
Sub Data_IN(ds As Date, de As Date, irc As Boolean)
    Dim i      As Long
    Dim j      As Integer
    Dim k      As Integer
    Dim m      As Integer
    Dim b      As String
    Dim du     As Date
    Dim dw     As Date
    Dim dur    As Date
    Dim dwr    As Date
    Dim ConR   As New ADODB.Recordset
    Dim a
    Dim SQL    As String
    Dim mi     As String '0,10,20,30,40,50の何れかがセットされる。
    Dim C0     As Single '天文潮位（現時刻）
    Dim C1     As Single '天文潮位（1時間後）
    Dim C2     As Single '天文潮位（2時間後）
    Dim C3     As Single '天文潮位（3時間後）
    Dim ch     As Boolean
    Dim uh     As Boolean
    Dim hw(4)  As Single
    Dim er     As Boolean

    If Err <> 0 Then
        MsgBox "水文.MDBにアクセスできません、水文.MDBの有無を確認してください。" & vbCrLf & _
               "計算できませんのでプロブラムは終了します。", vbExclamation
        End
    End If

    '****************************************************************
    '内部変数セット処理（010）
    '※miは、40等である。
    '****************************************************************
    mi = Fix(Minute(de) / 10) * 10

    '****************************************************************
    'DBアクセス処理（110）
    '(1)水文.mdbから1時間毎の水位観測値を取得する。
    '※dsは、関数の引数で2021/05/25 00:40等である。
    '※deは、関数の引数で2021/05/25 17:40等である。
    '(2)取得した水位観測値をグローバル変数のHOに格納する。
    'HO(1,1) 潮位観測値=日光川外水位観測値
    'HO(2,1) 洗堰越流量観測値=0
    'HO(3,1) 下之一色水位観測値
    'HO(4,1) 大治水位観測値
    'HO(5,1) 水場川外水位観測値
    'HO(6,1) 久地野水位観測値
    'HO(7,1) 春日水位観測値
    '※第1引数は、観測所のインデックスである。
    '※第2引数は、10:40,11:40,12:40,,,,等の時系列データのインデックスである。
    '※第2引数は、正常な場合、25件程である。25件の場合、25件目が予測対象の現時刻である。
    '****************************************************************
    '水位取得
    SQL = "select * from 水位 where Time between '" & Format(ds, "yyyy/mm/dd hh:nn") & "' and '" & _
           Format(de, "yyyy/mm/dd hh:nn") & "' and Minute = " & mi & " order by Time"
    Short_Break 4
    ConR.Open SQL, Con_水文, adOpenKeyset, adLockReadOnly
    i = 0
    Do Until ConR.EOF
        dw = ConR.Fields("Time").Value
        If i = 0 Then
            du = dw
        End If
        i = DateDiff("h", du, dw) + 1
        HO(1, i) = ConR.Fields("Tide").Value       'Tide 日光川外水位
        HO(2, i) = 0#                              '洗堰越流量
        HO(3, i) = ConR.Fields("下之一色").Value   '下之一色
        HO(4, i) = ConR.Fields("大治").Value       '大治
        HO(5, i) = ConR.Fields("水場川外").Value   '水場外
        HO(6, i) = ConR.Fields("久地野").Value     '久地野
        HO(7, i) = ConR.Fields("春日").Value       '春日
        ConR.MoveNext
    Loop
    ConR.Close

    '****************************************************************
    '****************************************************************
    '****************************************************************
    '現在から未来方向のデータ同化処理（210）
    '何かの値を計算して、内部変数のDH_Tideにセットする。
    '(1)予測計算の現時刻の潮位観測値が-99の場合で、10分前の気象庁履歴の日光川外水位が欠測の場合、DH_Tide=0
    '(2)予測計算の現時刻の潮位観測値が-99の場合で、10分前の気象庁履歴の日光川外水位計算値がある場合、DH_Tide=10分前の日光川外水位計算値
    '(3)予測計算の現時刻の潮位観測値が-99以外の場合、、、DH_Tide=0
    '※(3)のDH_Tideは結局のところ使用しない。DH_Tideを使用する条件、つまりHO(1,Now_Step)<-50#のため。
    '【修正履歴】
    ' 2022/03/08 考慮もれのバグがあるため、コメントアウトした。
    '****************************************************************
    '****************************************************************
    '****************************************************************
    '''If HO(1, Now_Step) < -50# Then
    '''    Tide_Special
    '''    ORA_Message_Out "水位データ受信", "日光川外水位データが欠測しました。天文潮位に直前の実況値との差分を加えて、現況・予測値とします。", 1
    '''Else
    '''    DH_Tide = 0#
    '''End If
    
    Dim localIndex              As Integer
    Dim localSQL                As String
    Dim localObsTime(3)         As Date
    Dim localObsTide(3)         As Single
    Dim localTenmonTide(3)      As Single
    Dim localObsMinusTenmonTide As Single
    Dim localTenmonTide1        As Single
    Dim localTenmonTide2        As Single
    Dim localTenmonTide3        As Single
    
    If HO(1, Now_Step) < -50# Then
        localSQL = "SELECT TOP 3 TIME,TIDE FROM 水位 WHERE TIME < '" & Format(de, "yyyy/mm/dd hh:nn") & _
                   "' AND TIDE <> -99 ORDER BY TIME DESC"
        Short_Break 4
        ConR.Open localSQL, Con_水文, adOpenKeyset, adLockReadOnly
        localIndex = 1
        Do Until ConR.EOF
            localObsTime(localIndex) = ConR.Fields("TIME").Value
            localObsTide(localIndex) = ConR.Fields("TIDE").Value '潮位観測値=日光川外水位観測値
            localIndex = localIndex + 1
            ConR.MoveNext
        Loop
        ConR.Close
    Else
    End If
    
    If HO(1, Now_Step) < -50# Then
        Cal_Tide localObsTime(1), localTenmonTide(1), localTenmonTide1, localTenmonTide2, localTenmonTide3
        Cal_Tide localObsTime(2), localTenmonTide(2), localTenmonTide1, localTenmonTide2, localTenmonTide3
        Cal_Tide localObsTime(3), localTenmonTide(3), localTenmonTide1, localTenmonTide2, localTenmonTide3
        localObsMinusTenmonTide = ((localObsTide(1) - localTenmonTide(1)) + (localObsTide(2) - localTenmonTide(2)) + (localObsTide(3) - localTenmonTide(3))) / 3#
        LOG_Out "de=" & de & "localObsMinusTenmonTide=" & localObsMinusTenmonTide
    Else
    End If

    '****************************************************************
    '現在から未来方向のデータ同化処理（220）
    '予測計算の現時刻の天文潮位（現時刻、1時間後、2時間後、3時間後）を計算する。
    '※dwは、予測計算の現時刻の値である。
    '※C0は、天文潮位の現時刻の値である。
    '※C1は、天文潮位の1時間後の値である。
    '※C2は、天文潮位の2時間後の値である。
    '※C3は、天文潮位の3時間後の値である。
    '****************************************************************
    '''予測潮位臨時
    '''TidalY dw, C0, C1, C2, C3    '気象庁潮位表から天文潮位を内挿する
    Cal_Tide dw, C0, C1, C2, C3     '60分調から天文潮位を計算する
    
    '****************************************************************
    '****************************************************************
    '****************************************************************
    '現在から未来方向のデータ同化処理（230）
    '(1)予測計算の現時刻の潮位観測値が-99の場合で、10分前の気象庁履歴の日光川外水位が欠測の場合、DH_Tide=0で、天文潮位を1時間後、2時間後、3時間後の潮位予測値とする。
    '(2)予測計算の現時刻の潮位観測値が-99の場合で、10分前の気象庁履歴の日光川外水位がある場合、DH_Tide=10分前の日光川外水位計算値で、1時間後、2時間後、3時間後の潮位予測値とする。
    '(3)予測計算の現時刻の潮位観測値が-99以外の場合、潮位観測値の現時刻の値に天文潮位の1時間分、2時間分、3時間分の変動値を加算して、1時間後、2時間後、3時間後の潮位予測値とする。
    '※(1)(2)とも考慮漏れのバグで障害が発生する。
    '****************************************************************
    '****************************************************************
    '****************************************************************
    If HO(1, Now_Step) < -50# Then
        '''HO(1, Now_Step) = C0 + DH_Tide
        '''HO(1, Now_Step + 1) = C1 + DH_Tide
        '''HO(1, Now_Step + 2) = C2 + DH_Tide
        '''HO(1, Now_Step + 3) = C3 + DH_Tide
        HO(1, Now_Step) = C0 + localObsMinusTenmonTide
        HO(1, Now_Step + 1) = C1 + localObsMinusTenmonTide
        HO(1, Now_Step + 2) = C2 + localObsMinusTenmonTide
        HO(1, Now_Step + 3) = C3 + localObsMinusTenmonTide
    Else
        '''DH_Tide = HO(1, Now_Step) - C0
        '''HO(1, Now_Step) = HO(1, Now_Step) + C0 - C0
        HO(1, Now_Step + 1) = HO(1, Now_Step) + C1 - C0
        HO(1, Now_Step + 2) = HO(1, Now_Step) + C2 - C0
        HO(1, Now_Step + 3) = HO(1, Now_Step) + C3 - C0
    End If
    
    '****************************************************************
    '現在から未来方向のデータ同化処理（240）
    '※下記240の処理をコメントアウトして、等価な処理となるように上記230の処理を修正した。
    '****************************************************************
    '''HO(1, Now_Step + 1) = C1 + DH_Tide
    '''HO(1, Now_Step + 2) = C2 + DH_Tide
    '''HO(1, Now_Step + 3) = C3 + DH_Tide

    '****************************************************************
    '条件判定処理（310）
    '水文.mdbから取得した水位観測値の件数が0件の場合、関数を抜ける。
    '****************************************************************
    If i = 0 Then
        '''MsgBox "ローカルDBに水位データがありません。"
        LOG_Out "ローカルDBに水位データがありません。"
        ds = CDate("1900/01/01 01:00")
        de = CDate("1900/01/01 01:00")
        Exit Sub
    End If

    '****************************************************************
    '内部変数セット処理（320）
    '****************************************************************
    '''実績水位最終データ日付の予測データを取りに行く
    Set ConR = Nothing
    jsd = du
    js(1) = Year(jsd)
    js(2) = Month(jsd)
    js(3) = Day(jsd)
    js(4) = Hour(jsd)
    js(5) = Minute(jsd)
    js(6) = 0
    jgd = dw
    jg(1) = Year(jgd)
    jg(2) = Month(jgd)
    jg(3) = Day(jgd)
    jg(4) = Hour(jgd)
    jg(5) = Minute(jgd)
    jg(6) = 0
    Now_Step = DateDiff("h", jsd, jgd) + 1
    All_Step = Now_Step + Yosoku_Step

    '****************************************************************
    'ログ出力処理（330）
    '計算に使用する水位観測値の件数が少ない場合にログを出力する。
    '※Now_StepはDBアクセス処理で取得した1時間毎の水位観測値の件数である。
    '※Now_Stepは例えば、10:40,11:40,12:40,,,,の水位観測値を取得する。
    '※Now_Stepは正常な場合、25件程である。
    '''※件数が少ない場合、ircを更新せずに、ここで関数を抜ける。
    '****************************************************************
    If Now_Step <= 4 Then
        '''LOG_Out "IN  Data_IN  計算に使用する水位データのステップがすくないので計算中止"
        LOG_Out "IN  Data_IN  計算に使用する水位データのステップがすくないので計算中止しない！！！"
        LOG_Out "IN  Data_IN  計算に使用する水位データのステップがすくないので計算中止しない！！！"
        LOG_Out "IN  Data_IN  計算に使用する水位データのステップがすくないので計算中止しない！！！"
        LOG_Out "IN  Data_IN  計算に使用する水位データのステップがすくないので計算中止しない！！！"
        LOG_Out "IN  Data_IN  計算に使用する水位データのステップがすくないので計算中止しない！！！"
        LOG_Out "IN  Data_IN  計算に使用する水位データのステップがすくないので計算中止しない！！！"
        LOG_Out "IN  Data_IN  計算に使用する水位データのステップがすくないので計算中止しない！！！"
        LOG_Out "IN  Data_IN  計算に使用する水位データのステップがすくないので計算中止しない！！！"
        LOG_Out "IN  Data_IN  計算に使用する水位データのステップがすくないので計算中止しない！！！"
        LOG_Out "IN  Data_IN  計算に使用する水位データのステップがすくないので計算中止しない！！！"
        LOG_Out "IN  Data_IN  計算に使用する水位データのステップがすくないので計算中止しない！！！"
        LOG_Out "IN  Data_IN  計算に使用する水位データのステップがすくないので計算中止しない！！！"
        LOG_Out "IN  Data_IN  計算に使用する水位データのステップがすくないので計算中止しない！！！"
        LOG_Out "IN  Data_IN  計算に使用する水位データのステップがすくないので計算中止しない！！！"
        LOG_Out "IN  Data_IN  計算に使用する水位データのステップがすくないので計算中止しない！！！"
        LOG_Out "IN  Data_IN  計算に使用する水位データのステップがすくないので計算中止しない！！！"
        LOG_Out "IN  Data_IN  計算に使用する水位データのステップがすくないので計算中止しない！！！"
        LOG_Out "IN  Data_IN  計算に使用する水位データのステップがすくないので計算中止しない！！！"
        '''修正開始　2016/09/23　O.OKADA　ここからコメントアウトする。
        '''修正理由　計算時刻が常に15分程度遅れているため。
        '''Exit Sub
        '''修正終了　2016/09/23　O.OKADA　ここまでコメントアウトする。
    End If
    
    '****************************************************************
    'ログ出力処理（340）
    '計算に使用する水位観測値の件数が少ない場合にログを出力する。
    '※Now_StepはDBアクセス処理で取得した1時間毎の水位観測値の件数である。
    '※Now_Stepは例えば、10:40,11:40,12:40,,,,の水位観測値を取得する。
    '※Now_Stepは正常な場合、25件程である。
    '''※件数が少ない場合、ircを更新せずに、ここで関数を抜ける。
    '****************************************************************
    If ds = de Or All_Step < 3 Then
        LOG_Out "IN  Data_IN  計算に使用する水位データのステップがすくないので計算中止しない？？？"
        LOG_Out "IN  Data_IN  計算に使用する水位データのステップがすくないので計算中止しない？？？"
        LOG_Out "IN  Data_IN  計算に使用する水位データのステップがすくないので計算中止しない？？？"
        LOG_Out "IN  Data_IN  計算に使用する水位データのステップがすくないので計算中止しない？？？"
        LOG_Out "IN  Data_IN  計算に使用する水位データのステップがすくないので計算中止しない？？？"
        LOG_Out "IN  Data_IN  計算に使用する水位データのステップがすくないので計算中止しない？？？"
        LOG_Out "IN  Data_IN  計算に使用する水位データのステップがすくないので計算中止しない？？？"
        LOG_Out "IN  Data_IN  計算に使用する水位データのステップがすくないので計算中止しない？？？"
        LOG_Out "IN  Data_IN  計算に使用する水位データのステップがすくないので計算中止しない？？？"
        LOG_Out "IN  Data_IN  計算に使用する水位データのステップがすくないので計算中止しない？？？"
        LOG_Out "IN  Data_IN  計算に使用する水位データのステップがすくないので計算中止しない？？？"
        LOG_Out "IN  Data_IN  計算に使用する水位データのステップがすくないので計算中止しない？？？"
        LOG_Out "IN  Data_IN  計算に使用する水位データのステップがすくないので計算中止しない？？？"
        LOG_Out "IN  Data_IN  計算に使用する水位データのステップがすくないので計算中止しない？？？"
        LOG_Out "IN  Data_IN  計算に使用する水位データのステップがすくないので計算中止しない？？？"
        LOG_Out "IN  Data_IN  計算に使用する水位データのステップがすくないので計算中止しない？？？"
        LOG_Out "IN  Data_IN  計算に使用する水位データのステップがすくないので計算中止しない？？？"
        LOG_Out "IN  Data_IN  計算に使用する水位データのステップがすくないので計算中止しない？？？"
        '''修正開始　2016/09/23　O.OKADA　ここからコメントアウトする。
        '''修正理由　計算時刻が常に15分程度遅れているため。
        '''Exit Sub
        '''修正終了　2016/09/23　O.OKADA　ここまでコメントアウトする。
    End If

    '****************************************************************
    '****************************************************************
    '****************************************************************
    '過去方向のデータ同化処理（410）
    '※つまり、補填処理である。
    'HO(1,i) 潮位観測値=日光川外水位観測値
    '※第1引数は、観測所のインデックスである。
    '※第2引数は、10:40,11:40,12:40,,,,等の時系列データのインデックスである。
    '※第2引数は、正常な場合、25件程である。25件の場合、25件目が予測対象の現時刻である。
    '※潮位観測値=日光川外水位観測値が-99の場合、
    '※第2引数が、最初の値の場合、潮位観測値の平均値としている1.5mにセットするが誤りである。
    '※第2引数が、最初の値以外の場合、潮位観測値の1つ前の値をコピーしているが誤りである。
    '不具合は、2021/05/25 18:40に発生する。
    '原因は、10分前の気象庁履歴の日光川外水位観測値が長期で欠測になった場合、
    'HO(1,i)=HO(1,i-1)としているため、データ同化後の潮位が長期-99発生前の値となるためである。
    '例えば、潮位の時系列データのHO(1,i)が1.5,0.07,0.07,,,,,,,0.07,1.5等となる。
    '3時間前の値と現時刻の水位観測値の差分を用いてスライド処理しているため、
    '水位が本来1.5mで良いにも関わらず、1.5+(1.5-0.07)=2.93m等となる。
    '****************************************************************
    '****************************************************************
    '****************************************************************
    '''下流端境界条件日光川外水位の補填
    '''修正1
    For i = 1 To Now_Step
        If HO(1, i) < -50# Then
            j = 1
            Select Case i
                Case 1
                    HO(1, 1) = 1.5
                Case Is > 1
                    HO(1, i) = HO(1, i - 1)
            End Select
        End If
    Next i

    '****************************************************************
    'データ同化処理（420）
    '※つまり、補填処理である。
    '潮位観測値=日光川外水位観測値から春日水位観測値の予測計算の現時刻の値が-99の場合、J1の処理を行う。
    '※i=1は、潮位観測値=日光川外水位観測値
    '※i=2は、洗堰水位観測値
    '※i=3は、下之一色、、、である。
    '※j=Now_Stepは、予測計算の現時刻である。
    '※過去方向のデータ同化の必要性を判定しているが、その後の処理が効果不明、影響不明、意味不明である。
    '****************************************************************
    '''欠測補填
    er = False
    For i = 1 To 7
        If i <> 2 Then
            ch = False
            '********************************************************
            '''For j = Now_Step - 3 To Now_Step '2004/03/24
            '********************************************************
            For j = Now_Step To Now_Step
                a = HO(i, j)
                If a < -50# Then
                    ch = True
                    GoTo J1
                End If
            Next j
        End If
    Next i
J1:
    If ch Then
        '************************************************************
        '過去方向のデータ同化処理（430）
        '※つまり、補填処理である。
        '※wH()に値をセットしているが、効果不明、影響不明、意味不明である。
        '************************************************************
        Pre_水位欠測補填
        
        '************************************************************
        '過去方向のデータ同化処理（440）
        '※つまり、補填処理である。
        '※内部変数のhw()に値をセットしているが、効果不明、影響不明、意味不明である。
        '************************************************************
        For i = 1 To 7
            If i <> 2 Then
                uh = True
                '****************************************************
                '''For j = Now_Step - 3 To Now_Step '2004/03/24
                '****************************************************
                For j = Now_Step To Now_Step
                    a = HO(i, j)
                    If a < -50# Then
                        uh = True
                        '********************************************
                        '''For k = Now_Step - 3 To Now_Step '2004/03/24
                        '********************************************
                        For k = Now_Step To Now_Step
                            '****************************************
                            '''m = k - (Now_Step - 3) + 1 '2004/03/24
                            '****************************************
                            m = k - Now_Step + 1
                            hw(m) = HO(i, k)
                        Next k
                        If hw(m) < -50# Then
                            er = True
                            ORA_Message_Out "テレメータ水位受信", Name_H(i) & "の、水位データが欠測しました。洪水予測システムによる結果を用いて水位予測計算を行います。", 1
                        End If
                        Exit For
                    End If
                Next j
            End If
        Next i
    End If
    
    '****************************************************************
    'エラー処理（510）
    '予測計算の現時刻の潮位観測値=日光川外水位観測値が欠測-99の場合、内部変数の欠測-99判定変数にTrueをセットする。
    '****************************************************************
    If HO(1, Now_Step) < -50# Then
        er = True
    End If
    
    '****************************************************************
    'エラー処理（520）
    '戻り値のircにTrueをセットする。
    '****************************************************************
    irc = True
    
    '****************************************************************
    'エラー処理（530）
    '手入力判定処理、欠測-99判定処理
    '※手入力するチェックボックスがチェックされていて、予測計算の現時刻の潮位観測値=日光川外水位観測値が欠測-99の場合、手入力用の関数を呼び出す。
    '※自動処理画面のみ有効としているため、IF文の内部の処理は実行されない。
    '******************************************************
    If (AutoDrive.Check6 = vbChecked) And er Then
        '''欠測補填を手入力する
        Load Data_Edit
        Unload Data_Edit
    End If
    
    '****************************************************************
    'エラー処理（540）
    '※IF文の内部の処理は実行されない。
    '※IF文の内部の処理はコメントアウト済みである。
    '****************************************************************
    If (AutoDrive.Check6 = vbUnchecked) And er Then
        '''欠測なので計算をスキップする
        '''irc = False '欠測でも計算するように修正 2004/4/26
        '''Exit Sub
    End If

    '''Dim nf As Long
    '''
    '''nf = FreeFile
    '''open app.Path & "\data\潮位スライド量.dat" for output
    '''LOG_Out "IN  Data_IN  潮位スライド量 CX=" & Format(cx, "###0.000")
    '''MDB_洗堰 jsd, jgd, er
End Sub

'********************************************************************
'【サブルーチン名】Pre_水位欠測補填()
'【処理概要】
'【処理詳細】
'【修正履歴】
'********************************************************************
Sub Pre_水位欠測補填()
    Dim ConR        As New ADODB.Recordset
    Dim SQL         As String
    Dim ds          As Date
    Dim de          As Date
    Dim i           As Long
    Dim j           As Long

    '****************************************************************
    '内部変数セット処理（010）
    '****************************************************************
    ds = DateAdd("h", -4, jgd)
    de = jgd

    '****************************************************************
    'DBアクセス処理（020）
    '****************************************************************
    SQL = "select * from 水位 where Time between '" & Format(ds, "yyyy/mm/dd hh:nn") & "' and '" & _
           Format(de, "yyyy/mm/dd hh:nn") & "' order by Time"
    ConR.Open SQL, Con_水文, adOpenKeyset, adLockReadOnly
    j = 1
    Do Until ConR.EOF
        For i = 1 To 6 '6水位観測所
            wH(i, j) = ConR.Fields(i + 1).Value
        Next i
        j = j + 1
        ConR.MoveNext
    Loop
    ConR.Close

End Sub

'********************************************************************
'【サブルーチン名】Tide_Special()
'【処理概要】
'【処理詳細】
'【修正履歴】
' 2022/03/08 潮位観測値=日光川外水位観測値が-99で、
' 10分前の気象庁履歴の日光川外水位観測値が欠測になった場合、予測水位が1.5m程度急上昇する不具合が発生する。
' 不具合は、2021/05/28 08:30に発生する。
' 原因は、10分前の気象庁履歴の日光川外水位観測値が欠測になった場合、DH_Tide=0となるためである。
' 対応するため、SQL文の10分前の制限を削除して、最新の気象庁履歴の日光川外水位観測値を取得するように修正した。
'********************************************************************
Sub Tide_Special()
    Dim SQL    As String
    Dim buf    As String
    Dim dw     As Date
    Dim w

    '****************************************************************
    'ログ出力処理（010）
    '****************************************************************
    LOG_Out "IN   Tide_Special"
    
    '****************************************************************
    'エラー処理（020）
    '****************************************************************
    On Error GoTo ER1

    '****************************************************************
    '内部変数セット処理（030）
    '****************************************************************
    DH_Tide = 0#
    '''MDB_履歴_Connection
    dw = DateAdd("n", -10, jgd)

    '****************************************************************
    'DBアクセス処理（040）
    '****************************************************************
    If isRAIN = "02" Then
        SQL = "SELECT 日光川外水位 FROM FRICS履歴 WHERE TIME='" & Format(dw, "yyyy/mm/dd hh:nn") & "'"
    Else
        '************************************************************
        '************************************************************
        '************************************************************
        '''SQL = "SELECT 日光川外水位 FROM 気象庁履歴 WHERE TIME='" & Format(dw, "yyyy/mm/dd hh:nn") & "'"
        '【修正履歴】
        ' 2022/03/08 潮位観測値=日光川外水位観測値が-99で、
        ' 10分前の気象庁履歴の日光川外水位観測値が欠測になった場合、予測水位が1.5m程度急上昇する不具合が発生する。
        ' 不具合は、2021/05/28 08:30に発生する。
        ' 原因は、10分前の気象庁履歴の日光川外水位観測値が欠測になった場合、DH_Tide=0となるためである。
        ' 対応するため、SQL文の10分前の制限を削除して、最新の気象庁履歴の日光川外水位観測値を取得するように修正した。
        '************************************************************
        '************************************************************
        '************************************************************
        SQL = "SELECT 日光川外水位 FROM 気象庁履歴 WHERE TIME IN (SELECT MAX(TIME) FROM 気象庁履歴)"
    End If
    Rec_履歴.Open SQL, Con_履歴, adOpenDynamic, adLockReadOnly
    If Rec_履歴.EOF Then
        DH_Tide = 0#
    Else
        buf = Rec_履歴.Fields(0).Value
        w = Split(buf, ",")
        DH_Tide = w(0)
    End If
    Rec_履歴.Close
    '''MDB_履歴_Close

    '****************************************************************
    'ログ出力処理（050）
    '****************************************************************
    LOG_Out "OUT  Tide_Special DH_Tide=" & Format(DH_Tide, "###0.000")
    Exit Sub

ER1:
    '****************************************************************
    'エラー処理（060）
    '****************************************************************
    LOG_Out "OUT  Tide_Special ABend DH_Tide=" & Format(DH_Tide, "###0.000")
    Rec_履歴.Close
    On Error GoTo 0
End Sub
